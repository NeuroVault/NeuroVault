- Make sure API edit/delete/update methods respect user permissions; i.e., users should not be able to use the API to fuck with other users' images.

- Modify datatables code to do server-side pagination, because eventually when number of images gets large, we don't want to send data for all images on each page load.

- Get metadata from pubmed rather than crossref, because crossref makes a lot of mistakes

- Add a 'display_name' value for all model fields, because the verbose_names are ugly

- Restructure the Collection model fields so it's not just about stuff relevant to published studies. E.g., we should add things like type of collection (study, meta-analysis database, etc.), publication status (published, in press, submitted, unpublished, etc.), etc.

- Need to check image hash against existing one every time image is edited; we don't need to redo the JSON conversion each time.

- JSON conversion may be unnecessary now that binary Nifti reader works, although may still be a good idea for other kinds of images (e.g., Analyze) that NiBabel will read

- Add foreign key for User to Image model. This implies a bit of redundancy but it will make our life much easier.

- Can we do a minor refactor to separate Images from Collections more cleanly? Users should be able to create images independently of Collections. Then when they create a Collection, they should have the option of adding any of the image they already own. So basically we want a many-to-many relationship rather than the current one-to-many (so that an Image can be in multiple collections).

- Fix image downloading in the viewer

- Add a lot more fields to Image model. Should contain any information necessary for basic interpretation of what the image means--e.g., intent (p values, t, z, etc.), min/max for convenience and color mapping (can set this during file processing), figure number if from a paper, etc.

- Move from SQLite to something more suitable for production--MySQL, PostGreSQL, etc.

- Create a Download model and track all image downloads by user (if logged in) and IP

- Add better image management options within collection--e.g., 'delete' row within table if user is logged in and owns collection

- Add help/FAQ section

- Add tooltips everywhere (already enabled through Bootstrap; just use 'title' attribute in any element to add)

- Collection instances should probably prioritize the user-provided name over the paper title

- To keep things tidier, I suggest we create a new "Publication" model that contains all public metadata associated with a paper, as opposed to all metadata added by the user. E.g., authors, paper title, PMID, MeSH keywords, etc. would all go in the Publication. That way we can display a "Publication" tab on the Collection details page for only those collections that have them, and it keeps a relatively clean separation between published and unpublished collections.

- The *datatables methods in the API ViewSets could stand to be customized, so that, e.g., fields like add_date return better-formatted values.

- The upload image screen needs to remind users that everything they upload is immediately public and downloadable.