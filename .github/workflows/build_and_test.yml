name: Building and Testing Workflow
on: [workflow_dispatch,push]

jobs:
  build_neurovault:
   runs-on: ubuntu-latest
   steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Configuration
        run: |
          cp .env.example .env
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      -
        name: Build and push
        uses: docker/bake-action@master
        with:
          files: docker-compose.yml
          push: true
          load: false
          set: |
              uwsgi.tags=ghcr.io/${{ env.OWNER_LC }}/neurovault:${{ hashFiles('**/neurovault/**') }}
              uwsgi.cache-from=type=registry,ref=ghcr.io/${{ env.OWNER_LC }}/neurovault:${{ hashFiles('**/neurovault/**') }}
              uwsgi.cache-from=type=gha,scope=cached-neurovault
              uwsgi.cache-to=type=gha,scope=cached-neurovault,mode=max

  neurovault_backend_tests:
    runs-on: ubuntu-latest
    needs: build_neurovault
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Configuration
        run: |
          cp .env.example .env
      -
        name: load images
        uses: docker/bake-action@master
        with:
          files: docker-compose.yml
          push: false
          load: true
          set: |
              uwsgi.cache-from=type=gha,scope=cached-neurovault
      - 
        name: spin up backend
        run: |
          docker-compose pull
          docker-compose build
          docker-compose \
            -f docker-compose.yml \
            up -d
      - 
        name: Migrate Database
        run: |
          until docker-compose exec -T \
          postgres pg_isready -U postgres; do sleep 1; done

          docker-compose exec -T uwsgi python manage.py migrate
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 60
      -
        name: Backend Tests
        run: |
          docker-compose exec -T uwsgi python manage.py test
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 60
