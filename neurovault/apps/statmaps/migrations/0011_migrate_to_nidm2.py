# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('statmaps', '0010_migrate_to_nidm1'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('qValueFDR', models.FloatField(null=True)),
                ('clusterLabelId', models.IntegerField(null=True)),
                ('pValueUncorrected', models.FloatField(null=True)),
                ('pValueFWER', models.FloatField(null=True)),
                ('clusterSizeInVoxels', models.IntegerField(null=True)),
                ('clusterSizeInResels', models.FloatField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ClusterLabelMap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContrastEstimation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContrastMap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
                ('contrastName', models.CharField(max_length=200, null=True)),
                ('sha512', models.CharField(max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContrastStandardErrorMap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
                ('sha512', models.CharField(max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContrastWeights',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('statisticType', models.CharField(max_length=200, null=True, choices=[(b'http://www.incf.org/ns/nidash/nidm#ZStatistic', b'Z'), (b'http://www.incf.org/ns/nidash/nidm#Statistic', b'Other'), (b'http://www.incf.org/ns/nidash/nidm#FStatistic', b'F'), (b'http://www.incf.org/ns/nidash/nidm#TStatistic', b'F')])),
                ('contrastName', models.CharField(max_length=200, null=True)),
                ('value', models.CharField(max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Coordinate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('coordinate3', models.FloatField(null=True)),
                ('coordinate2', models.FloatField(null=True)),
                ('coordinate1', models.FloatField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CoordinateSpace',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('voxelUnits', models.CharField(max_length=200, null=True)),
                ('dimensionsInVoxels', models.CharField(max_length=200, null=True)),
                ('inWorldCoordinateSystem', models.CharField(max_length=200, null=True)),
                ('voxelSize', models.CharField(max_length=200, null=True)),
                ('voxelToWorldMapping', models.CharField(max_length=200, null=True)),
                ('numberOfDimensions', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('grandMeanScaling', models.NullBooleanField(default=None)),
                ('targetIntensity', models.FloatField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DesignMatrix',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ExcursionSet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
                ('maximumIntensityProjection', models.FileField(null=True, upload_to=b'hash_filestore')),
                ('pValue', models.FloatField(null=True)),
                ('numberOfClusters', models.IntegerField(null=True)),
                ('sha512', models.CharField(max_length=200, null=True)),
                ('underlayFile', models.FileField(null=True, upload_to=b'hash_filestore')),
                ('atCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('clusterLabelMap', models.ForeignKey(to='statmaps.ClusterLabelMap', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ExtentThreshold',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('userSpecifiedThresholdType', models.CharField(max_length=200, null=True)),
                ('pValueUncorrected', models.FloatField(null=True)),
                ('pValueFWER', models.FloatField(null=True)),
                ('qValueFDR', models.FloatField(null=True)),
                ('clusterSizeInVoxels', models.IntegerField(null=True)),
                ('clusterSizeInResels', models.FloatField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HeightThreshold',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('value', models.FloatField(null=True)),
                ('userSpecifiedThresholdType', models.CharField(max_length=200, null=True)),
                ('pValueUncorrected', models.FloatField(null=True)),
                ('qValueFDR', models.FloatField(null=True)),
                ('pValueFWER', models.FloatField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Inference',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('alternativeHypothesis', models.CharField(max_length=200, null=True)),
                ('hasAlternativeHypothesis', models.CharField(max_length=200, null=True, choices=[(b'http://www.incf.org/ns/nidash/nidm#TwoTailedTest', b'Two Tailed'), (b'http://www.incf.org/ns/nidash/nidm#OneTailedTest', b'One Tailed')])),
                ('contrastMap', models.ForeignKey(to='statmaps.ContrastMap', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('format', models.CharField(max_length=200, null=True)),
                ('sha512', models.CharField(max_length=200, null=True)),
                ('filename', models.CharField(max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MaskMap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
                ('hasMapHeader', models.CharField(max_length=200, null=True)),
                ('atCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('inCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('map', models.OneToOneField(null=True, to='statmaps.Map')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ModelParametersEstimation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('withEstimationMethod', models.CharField(max_length=200, null=True, choices=[(b'http://www.incf.org/ns/nidash/nidm#WeightedLeastSquares', b'WeightedLeastSquares'), (b'http://www.incf.org/ns/nidash/nidm#OrdinaryLeastSquares', b'OrdinaryLeastSquares'), (b'http://www.incf.org/ns/nidash/nidm#GeneralizedLeastSquares', b'GeneralizedLeastSquares'), (b'http://www.incf.org/ns/nidash/nidm#EstimationMethod', b'EstimatedMethod'), (b'http://www.incf.org/ns/nidash/nidm#RobustIterativelyReweighedLeastSquares', b'RobustIterativelyReweighedLeastSquares')])),
                ('data', models.ForeignKey(to='statmaps.Data', null=True)),
                ('designMatrix', models.ForeignKey(to='statmaps.DesignMatrix', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NoiseModel',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('dependenceSpatialModel', models.CharField(max_length=200, null=True, choices=[(b'http://www.incf.org/ns/nidash/nidm#SpatiallyLocalModel', b'Spatiakky Local'), (b'http://www.incf.org/ns/nidash/nidm#SpatialModel', b'Spatial'), (b'http://www.incf.org/ns/nidash/nidm#SpatiallyRegularizedModel', b'SpatiallyRegularized'), (b'http://www.incf.org/ns/nidash/nidm#SpatiallyGlobalModel', b'Spatially Global')])),
                ('hasNoiseDistribution', models.CharField(max_length=200, null=True, choices=[(b'fsl:NonParametricSymmetricDistribution', b'Non-Parametric Symmetric'), (b'http://www.incf.org/ns/nidash/nidm#GaussianDistribution', b'Gaussian'), (b'http://www.incf.org/ns/nidash/nidm#NoiseDistribution', b'Noise'), (b'http://www.incf.org/ns/nidash/nidm#PoissonDistribution', b'Poisson'), (b'fsl:BinomialDistribution', b'Binomial'), (b'http://www.incf.org/ns/nidash/nidm#NonParametricDistribution', b'Non-Parametric')])),
                ('hasNoiseDependence', models.CharField(max_length=200, null=True, choices=[(b'http://www.incf.org/ns/nidash/nidm#ArbitrarilyCorrelatedNoise', b'Arbitrarily Correlated'), (b'http://www.incf.org/ns/nidash/nidm#ExchangeableNoise', b'Exchangable'), (b'http://www.incf.org/ns/nidash/nidm#SeriallyCorrelatedNoise', b'Serially Correlated'), (b'http://www.incf.org/ns/nidash/nidm#CompoundSymmetricNoise', b'Compound Symmetric'), (b'http://www.incf.org/ns/nidash/nidm#IndependentNoise', b'Independent')])),
                ('noiseVarianceHomogeneous', models.NullBooleanField(default=None)),
                ('varianceSpatialModel', models.CharField(max_length=200, null=True, choices=[(b'http://www.incf.org/ns/nidash/nidm#SpatiallyLocalModel', b'Spatially Local'), (b'http://www.incf.org/ns/nidash/nidm#SpatialModel', b'Spatial'), (b'http://www.incf.org/ns/nidash/nidm#SpatiallyRegularizedModel', b'Spatially Regularized'), (b'http://www.incf.org/ns/nidash/nidm#SpatiallyGlobalModel', b'Spatially Global')])),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ParameterEstimateMap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
                ('hasMapHeader', models.CharField(max_length=200, null=True)),
                ('atCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('inCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('map', models.OneToOneField(null=True, to='statmaps.Map')),
                ('modelParameterEstimation', models.ForeignKey(to='statmaps.ModelParametersEstimation', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Peak',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('equivalentZStatistic', models.FloatField(null=True)),
                ('value', models.FloatField(null=True)),
                ('qValueFDR', models.FloatField(null=True)),
                ('pValueUncorrected', models.FloatField(null=True)),
                ('pValueFWER', models.FloatField(null=True)),
                ('cluster', models.ForeignKey(to='statmaps.Cluster', null=True)),
                ('coordinate', models.OneToOneField(to='statmaps.Coordinate')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProvImage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReselsPerVoxelMap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
                ('sha512', models.CharField(max_length=200, null=True)),
                ('atCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('inCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('map', models.OneToOneField(null=True, to='statmaps.Map')),
                ('modelParametersEstimation', models.OneToOneField(null=True, to='statmaps.ModelParametersEstimation')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResidualMeanSquaresMap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('file', models.FileField(null=True, upload_to=b'')),
                ('sha512', models.CharField(max_length=200, null=True)),
                ('atCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('inCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('map', models.OneToOneField(null=True, to='statmaps.Map')),
                ('modelParametersEstimation', models.OneToOneField(null=True, to='statmaps.ModelParametersEstimation')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SearchSpaceMap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('prov_type', models.CharField(max_length=200, null=True)),
                ('prov_label', models.CharField(max_length=200, null=True)),
                ('prov_URI', models.CharField(max_length=200, unique=True, null=True)),
                ('expectedNumberOfClusters', models.FloatField(null=True)),
                ('expectedNumberOfVoxelsPerCluster', models.FloatField(null=True)),
                ('reselSize', models.FloatField(null=True)),
                ('smallestSignifClusterSizeInVoxelsFDR05', models.IntegerField(null=True)),
                ('smallestSignifClusterSizeInVoxelsFWE05', models.IntegerField(null=True)),
                ('heightCriticalThresholdFDR05', models.FloatField(null=True)),
                ('heightCriticalThresholdFWE05', models.FloatField(null=True)),
                ('searchVolumeInVoxels', models.IntegerField(null=True)),
                ('searchVolumeInUnits', models.FloatField(null=True)),
                ('noiseFWHMInVoxels', models.CharField(max_length=200, null=True)),
                ('noiseFWHMInUnits', models.CharField(max_length=200, null=True)),
                ('sha512', models.CharField(max_length=200, null=True)),
                ('searchVolumeInResels', models.FloatField(null=True)),
                ('file', models.FileField(null=True, upload_to=b'hash_filestore')),
                ('randomFieldStationarity', models.NullBooleanField(default=None)),
                ('searchVolumeReselsGeometry', models.CharField(max_length=200, null=True)),
                ('atCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('inCoordinateSpace', models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True)),
                ('inference', models.ForeignKey(to='statmaps.Inference', null=True)),
                ('map', models.OneToOneField(null=True, to='statmaps.Map')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='modelparametersestimation',
            name='noiseModel',
            field=models.ForeignKey(to='statmaps.NoiseModel', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='maskmap',
            name='modelParametersEstimation',
            field=models.OneToOneField(null=True, to='statmaps.ModelParametersEstimation'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='inference',
            name='reselsPerVoxelMap',
            field=models.ForeignKey(to='statmaps.ReselsPerVoxelMap', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='inference',
            name='statisticMap',
            field=models.ForeignKey(to='statmaps.StatisticMap', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='excursionset',
            name='image',
            field=models.OneToOneField(null=True, to='statmaps.ProvImage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='excursionset',
            name='inCoordinateSpace',
            field=models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='excursionset',
            name='inference',
            field=models.ForeignKey(to='statmaps.Inference', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='designmatrix',
            name='image',
            field=models.OneToOneField(null=True, to='statmaps.ProvImage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contraststandarderrormap',
            name='atCoordinateSpace',
            field=models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contraststandarderrormap',
            name='contrastEstimation',
            field=models.OneToOneField(null=True, to='statmaps.ContrastEstimation'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contraststandarderrormap',
            name='map',
            field=models.OneToOneField(null=True, to='statmaps.Map'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contrastmap',
            name='atCoordinateSpace',
            field=models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contrastmap',
            name='contrastEstimation',
            field=models.ForeignKey(to='statmaps.ContrastEstimation', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contrastmap',
            name='inCoordinateSpace',
            field=models.ForeignKey(related_name='+', to='statmaps.CoordinateSpace', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contrastmap',
            name='map',
            field=models.OneToOneField(null=True, to='statmaps.Map'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contrastestimation',
            name='contrastWeights',
            field=models.ForeignKey(to='statmaps.ContrastWeights', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contrastestimation',
            name='maskMap',
            field=models.ForeignKey(to='statmaps.MaskMap', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contrastestimation',
            name='parameterEstimateMap',
            field=models.ManyToManyField(to='statmaps.ParameterEstimateMap', null=True, blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contrastestimation',
            name='residualMeanSquaresMap',
            field=models.ForeignKey(to='statmaps.ResidualMeanSquaresMap', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='clusterlabelmap',
            name='map',
            field=models.OneToOneField(null=True, to='statmaps.Map'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='cluster',
            name='excursionSet',
            field=models.ForeignKey(to='statmaps.ExcursionSet', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='statisticmap',
            name='prov_URI',
            field=models.CharField(max_length=200, unique=True, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='statisticmap',
            name='prov_label',
            field=models.CharField(max_length=200, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='statisticmap',
            name='prov_type',
            field=models.CharField(max_length=200, null=True),
            preserve_default=True,
        ),
    ]
